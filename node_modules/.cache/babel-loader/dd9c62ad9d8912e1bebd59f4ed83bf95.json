{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nexport const useCheckTrip = (trips, params, setTripItem) => {\n  _s();\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    const item = trips.find(trip => trip.id === params);\n    !item ? navigate('/', {\n      replace: true\n    }) : setTripItem(item);\n  }, []);\n};\n\n_s(useCheckTrip, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["useEffect","useNavigate","useCheckTrip","trips","params","setTripItem","navigate","item","find","trip","id","replace"],"sources":["C:/Users/вадим/Desktop/bsa-react1/bsa-react1/homework/react/my-app/src/hooks/useCheckTrip.ts"],"sourcesContent":["import {useEffect} from \"react\";\r\nimport {ITrip} from \"../types/types\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport type paramsId = {\r\n    tripId: string\r\n}\r\n\r\nexport const useCheckTrip = (trips:ITrip[], params: string, setTripItem:(i:ITrip) => void) => {\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        const item: ITrip | undefined = trips.find(trip => trip.id === params);\r\n        !item\r\n            ? navigate('/', {replace: true})\r\n            : setTripItem(item);\r\n    }, []);\r\n}"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AAEA,SAAQC,WAAR,QAA0B,kBAA1B;AAMA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAgBC,MAAhB,EAAgCC,WAAhC,KAAkE;EAAA;;EAC1F,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMO,IAAuB,GAAGJ,KAAK,CAACK,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYN,MAA/B,CAAhC;IACA,CAACG,IAAD,GACMD,QAAQ,CAAC,GAAD,EAAM;MAACK,OAAO,EAAE;IAAV,CAAN,CADd,GAEMN,WAAW,CAACE,IAAD,CAFjB;EAGH,CALQ,EAKN,EALM,CAAT;AAMH,CARM;;GAAML,Y;UACQD,W"},"metadata":{},"sourceType":"module"}